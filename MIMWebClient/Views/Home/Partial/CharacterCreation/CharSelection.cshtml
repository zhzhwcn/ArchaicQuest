@model MIMWebClient.Models.CreatePlayer


<div id="select-char" class="notVisible">
    @using (@Html.BeginForm("CreateCharacter", "Home", FormMethod.Post, new { id = "createCharaterForm" }))
    {
        <div class="row">
            <div class="col-xs-12">

                <div class="form-group" id="CreateCharName">
                    <label for="Name">角色名</label>
                    @{
                        @Html.TextBoxFor(input => input.Name, string.Empty, new { @class = "form-control", placeholder = "角色名" })
                        @Html.ValidationMessageFor(input => input.Name, string.Empty, new { @class="errorMsg"} )

                    }

                    <a href="javascript:void(0)" class="btn btn-success js-generateName" title="随机名">随机</a>

                    <small>来一个响亮的名字.</small>
                </div>

                <div class="form-group">
                    <label for="male">性别</label>
                    <label class="radio-inline">

                        @{
                            @Html.RadioButtonFor(input => input.Gender, "Male", new { id = "Male", @checked = true, name = "Male" })
                            @:男
                        }
                    </label>

                    <label class="radio-inline">

                        @{
                            @Html.RadioButtonFor(input => input.Gender, "Female", new { id = "Female", name = "Female" })
                            @:女
                        }
                    </label>
                </div>

                <div class="form-group">
                    <label for="Email">Email</label>
                    @{
                        @Html.TextBoxFor(input => input.Email, string.Empty, new { type = "email", @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(input => input.Email, string.Empty, new { @class = "errorMsg" })
                    }
                </div>

                <div class="form-group">
                    <label for="password">密码</label>
                    @{
                        @Html.TextBoxFor(input => input.Password, string.Empty, new { id = "password", type = "password", @class = "form-control", placeholder = "密码" })
                        @Html.ValidationMessageFor(input => input.Password, string.Empty, new { @class = "errorMsg" })
                    }
                </div>

                <div class="form-group">
                    <label for="password">确认密码</label>
                    @{
                        @Html.TextBoxFor(input => input.ConfirmPassword, string.Empty, new { id = "confirmPassword", type = "password", @class = "form-control", placeholder = "确认密码" })
                        @Html.ValidationMessageFor(input => input.ConfirmPassword, string.Empty, new { @class = "errorMsg" })
                    }
                    <p id="passwordMatchError" class="notVisible alert alert-danger">密码不匹配</p>
                </div>

                @{
//hidden fields for stats
                    @Html.HiddenFor(input => input.Strength, string.Empty);
                    @Html.HiddenFor(input => input.Dexterity, string.Empty);
                    @Html.HiddenFor(input => input.Constitution, string.Empty);
                    @Html.HiddenFor(input => input.Intelligence, string.Empty);
                    @Html.HiddenFor(input => input.Wisdom, string.Empty);
                    @Html.HiddenFor(input => input.Charisma, string.Empty);
                    @Html.HiddenFor(input => input.Race, string.Empty);
                    @Html.HiddenFor(input => input.Class, string.Empty);
                }
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <button type="submit" class="btn btn-success pull-right" id="CreateCharBt">创建角色</button>
                <button type="button" class="btn btn-default pull-right margin-right-10" id="backToClass">上一步: 修改属性?</button>
            </div>
        </div>
                    }
</div>
